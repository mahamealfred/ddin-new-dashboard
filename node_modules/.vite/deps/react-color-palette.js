"use client";
import {
  require_react
} from "./chunk-I773Y2XN.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/react-color-palette/dist/rcp.mjs
var import_react = __toESM(require_react(), 1);
var import_react2 = __toESM(require_react(), 1);
var import_react3 = __toESM(require_react(), 1);
var import_react4 = __toESM(require_react(), 1);
var import_react5 = __toESM(require_react(), 1);
var import_react6 = __toESM(require_react(), 1);
var import_react7 = __toESM(require_react(), 1);
var import_react8 = __toESM(require_react(), 1);
function v(o, e) {
  return Array.isArray(o) ? o.includes(e) : o;
}
var X = (o) => {
  let e = o.getBoundingClientRect();
  return { width: e.width, height: e.height };
};
function f() {
  let o = (0, import_react3.useRef)(null), [e, r] = (0, import_react3.useState)({ width: 1, height: 1 });
  (0, import_react3.useLayoutEffect)(() => {
    let s = () => {
      o.current && r(X(o.current));
    }, t = ([{ contentBoxSize: a }]) => {
      r({ height: a[0].blockSize, width: a[0].inlineSize });
    };
    window.addEventListener("resize", s, false);
    let i = new ResizeObserver(t);
    return o.current && i.observe(o.current), () => {
      window.removeEventListener("resize", s, false), i.disconnect();
    };
  }, []);
  let n = (0, import_react3.useCallback)(() => {
    var _a;
    let { left: s = 1, right: t = 1, top: i = 1, bottom: a = 1 } = ((_a = o.current) == null ? void 0 : _a.getBoundingClientRect()) ?? {};
    return { left: s, right: t, top: i, bottom: a };
  }, []);
  return [o, e, n];
}
function y(o, e, r) {
  return o < e ? e : o > r ? r : o;
}
var E = class {
  convert(e, r) {
    let n = this.toHex("#000000"), s = this.hex2rgb(n), t = this.rgb2hsv(s);
    if (e === "hex") {
      let i = r;
      n = this.toHex(i), s = this.hex2rgb(n), n.startsWith("rgba") && (s = this.toRgb(n), n = this.rgb2hex(s)), t = this.rgb2hsv(s);
    } else e === "rgb" ? (s = r, n = this.rgb2hex(s), t = this.rgb2hsv(s)) : e === "hsv" && (t = r, s = this.hsv2rgb(t), n = this.rgb2hex(s));
    return { hex: n, rgb: s, hsv: t };
  }
  toHex(e) {
    if (e.startsWith("#")) {
      if (e.length === 4 || e.length === 5) return e = e.split("").map((r, n) => n ? n < 4 ? r + r : r === "f" ? void 0 : r + r : "#").join(""), e;
      if (e.length === 7) return e;
      if (e.length === 9) return e.endsWith("ff") ? e.slice(0, 7) : e;
    } else {
      let r = document.createElement("canvas").getContext("2d");
      if (!r) throw new Error("2d context not supported or canvas already initialized");
      return r.fillStyle = e, r.fillStyle;
    }
    return "#000000";
  }
  toRgb(e) {
    let r = e.match(/\d+(\.\d+)?/gu) ?? [], [n, s, t, i] = Array.from({ length: 4 }).map((a, c) => y(+(r[c] ?? (c < 3 ? 0 : 1)), 0, c < 3 ? 255 : 1));
    return { r: n, g: s, b: t, a: i };
  }
  toHsv(e) {
    let r = e.match(/\d+(\.\d+)?/gu) ?? [], [n, s, t, i] = Array.from({ length: 4 }).map((a, c) => y(+(r[c] ?? (c < 3 ? 0 : 1)), 0, c ? c < 3 ? 100 : 1 : 360));
    return { h: n, s, v: t, a: i };
  }
  hex2rgb(e) {
    e = e.slice(1);
    let [r, n, s, t] = Array.from({ length: 4 }).map((i, a) => parseInt(e.slice(a * 2, a * 2 + 2), 16));
    return t = Number.isNaN(t) ? 1 : t / 255, { r, g: n, b: s, a: t };
  }
  rgb2hsv({ r: e, g: r, b: n, a: s }) {
    e /= 255, r /= 255, n /= 255;
    let t = Math.max(e, r, n), i = t - Math.min(e, r, n), a = i ? (t === e ? (r - n) / i + (r < n ? 6 : 0) : t === r ? 2 + (n - e) / i : 4 + (e - r) / i) * 60 : 0, c = t ? i / t * 100 : 0, u = t * 100;
    return { h: a, s: c, v: u, a: s };
  }
  hsv2rgb({ h: e, s: r, v: n, a: s }) {
    r /= 100, n /= 100;
    let t = ~~(e / 60), i = e / 60 - t, a = n * (1 - r), c = n * (1 - r * i), u = n * (1 - r * (1 - i)), l = t % 6, h = [n, c, a, a, u, n][l] * 255, d = [u, n, n, c, a, a][l] * 255, b = [a, a, u, n, n, c][l] * 255;
    return { r: h, g: d, b, a: s };
  }
  rgb2hex({ r: e, g: r, b: n, a: s }) {
    let [t, i, a, c] = [e, r, n, s].map((u, l) => Math.round(l < 3 ? u : u * 255).toString(16).padStart(2, "0"));
    return ["#", t, i, a, c === "ff" ? void 0 : c].join("");
  }
};
var m = new E();
function g(o) {
  return "touches" in o;
}
var x = (0, import_react4.memo)(({ onCoordinateChange: o, children: e, disabled: r }) => {
  let [n, { width: s, height: t }, i] = f(), a = (0, import_react4.useCallback)((u, l = false) => {
    let { left: h, top: d } = i(), b = y(u.clientX - h, 0, s), I = y(u.clientY - d, 0, t);
    o(l, b, I);
  }, [s, t, i, o]), c = (0, import_react4.useCallback)((u) => {
    if (!g(u) && u.button !== 0) return;
    let l = (d) => {
      a(g(d) ? d.touches[0] : d);
    }, h = (d) => {
      a(g(d) ? d.changedTouches[0] : d, true), document.removeEventListener(g(d) ? "touchmove" : "mousemove", l, false), document.removeEventListener(g(d) ? "touchend" : "mouseup", h, false);
    };
    l(u), document.addEventListener(g(u) ? "touchmove" : "mousemove", l, false), document.addEventListener(g(u) ? "touchend" : "mouseup", h, false);
  }, [a]);
  return import_react4.default.createElement("div", { ref: n, className: "rcp-interactive", onMouseDown: c, onTouchStart: c, "aria-disabled": r }, e);
});
var H = (0, import_react2.memo)(({ color: o, disabled: e, onChange: r, onChangeComplete: n }) => {
  let [s, { width: t }] = f(), i = (0, import_react2.useMemo)(() => ({ x: o.hsv.a * t }), [o.hsv.a, t]), a = (0, import_react2.useCallback)((l, h) => {
    let d = m.convert("hsv", { ...o.hsv, a: h / t });
    r(d), l && (n == null ? void 0 : n(d));
  }, [o.hsv, t, r, n]), c = (0, import_react2.useMemo)(() => [o.rgb.r, o.rgb.g, o.rgb.b].join(" "), [o.rgb.r, o.rgb.g, o.rgb.b]), u = (0, import_react2.useMemo)(() => [c, o.rgb.a].join(" / "), [c, o.rgb.a]);
  return import_react2.default.createElement(x, { disabled: e, onCoordinateChange: a }, import_react2.default.createElement("div", { ref: s, style: { background: `linear-gradient(to right, rgb(${c} / 0), rgb(${c} / 1)) top left / auto auto,
                      conic-gradient(#666 0.25turn, #999 0.25turn 0.5turn, #666 0.5turn 0.75turn, #999 0.75turn) top left / 12px 12px
                      repeat` }, className: "rcp-alpha" }, import_react2.default.createElement("div", { style: { left: i.x, background: `linear-gradient(to right, rgb(${u}), rgb(${u})) top left / auto auto,
                        conic-gradient(#666 0.25turn, #999 0.25turn 0.5turn, #666 0.5turn 0.75turn, #999 0.75turn) ${-i.x - 4}px 2px / 12px 12px
                        repeat` }, className: "rcp-alpha-cursor" })));
});
function S(o, e) {
  return Math.round(o * 10 ** e) / 10 ** e;
}
function N({ r: o, g: e, b: r, a: n }) {
  let s = [Math.round(o), Math.round(e), Math.round(r)], t = S(n, 3);
  return t < 1 && s.push(t), s.join(", ");
}
function k({ h: o, s: e, v: r, a: n }) {
  let s = [`${Math.round(o)}Â°`, `${Math.round(e)}%`, `${Math.round(r)}%`], t = S(n, 3);
  return t < 1 && s.push(t), s.join(", ");
}
var D = (0, import_react5.memo)(({ hideInput: o, color: e, disabled: r, onChange: n, onChangeComplete: s }) => {
  let [t, i] = (0, import_react5.useState)({ hex: { value: e.hex, inputted: false }, rgb: { value: N(e.rgb), inputted: false }, hsv: { value: k(e.hsv), inputted: false } });
  (0, import_react5.useEffect)(() => {
    t.hex.inputted || i((l) => ({ ...l, hex: { ...l.hex, value: e.hex } }));
  }, [t.hex.inputted, e.hex]), (0, import_react5.useEffect)(() => {
    t.rgb.inputted || i((l) => ({ ...l, rgb: { ...l.rgb, value: N(e.rgb) } }));
  }, [t.rgb.inputted, e.rgb]), (0, import_react5.useEffect)(() => {
    t.hsv.inputted || i((l) => ({ ...l, hsv: { ...l.hsv, value: k(e.hsv) } }));
  }, [t.hsv.inputted, e.hsv]);
  let a = (0, import_react5.useCallback)((l) => (h) => {
    let { value: d } = h.target;
    i((b) => ({ ...b, [l]: { ...b[l], value: d } })), n(l === "hsv" ? m.convert("hsv", m.toHsv(d)) : l === "rgb" ? m.convert("rgb", m.toRgb(d)) : m.convert("hex", d));
  }, [n]), c = (0, import_react5.useCallback)((l) => () => {
    i((h) => ({ ...h, [l]: { ...h[l], inputted: true } }));
  }, []), u = (0, import_react5.useCallback)((l) => (h) => {
    let { value: d } = h.target;
    i((b) => ({ ...b, [l]: { ...b[l], inputted: false } })), s == null ? void 0 : s(l === "hsv" ? m.convert("hsv", m.toHsv(d)) : l === "rgb" ? m.convert("rgb", m.toRgb(d)) : m.convert("hex", d));
  }, [s]);
  return import_react5.default.createElement("div", { className: "rcp-fields" }, !v(o, "hex") && import_react5.default.createElement("div", { className: "rcp-fields-floor" }, import_react5.default.createElement("div", { className: "rcp-field" }, import_react5.default.createElement("input", { id: "hex", className: "rcp-field-input", readOnly: r, value: t.hex.value, onChange: a("hex"), onFocus: c("hex"), onBlur: u("hex") }), import_react5.default.createElement("label", { htmlFor: "hex", className: "rcp-field-label" }, "HEX"))), (!v(o, "rgb") || !v(o, "hsv")) && import_react5.default.createElement("div", { className: "rcp-fields-floor" }, !v(o, "rgb") && import_react5.default.createElement("div", { className: "rcp-field" }, import_react5.default.createElement("input", { id: "rgb", className: "rcp-field-input", readOnly: r, value: t.rgb.value, onChange: a("rgb"), onFocus: c("rgb"), onBlur: u("rgb") }), import_react5.default.createElement("label", { htmlFor: "rgb", className: "rcp-field-label" }, "RGB")), !v(o, "hsv") && import_react5.default.createElement("div", { className: "rcp-field" }, import_react5.default.createElement("input", { id: "hsv", className: "rcp-field-input", readOnly: r, value: t.hsv.value, onChange: a("hsv"), onFocus: c("hsv"), onBlur: u("hsv") }), import_react5.default.createElement("label", { htmlFor: "hsv", className: "rcp-field-label" }, "HSV"))));
});
var F = (0, import_react6.memo)(({ color: o, disabled: e, onChange: r, onChangeComplete: n }) => {
  let [s, { width: t }] = f(), i = (0, import_react6.useMemo)(() => ({ x: o.hsv.h / 360 * t }), [o.hsv.h, t]), a = (0, import_react6.useCallback)((u, l) => {
    let h = m.convert("hsv", { ...o.hsv, h: l / t * 360 });
    r(h), u && (n == null ? void 0 : n(h));
  }, [o.hsv, t, r, n]), c = (0, import_react6.useMemo)(() => [o.hsv.h, "100%", "50%"].join(" "), [o.hsv.h]);
  return import_react6.default.createElement(x, { disabled: e, onCoordinateChange: a }, import_react6.default.createElement("div", { ref: s, className: "rcp-hue" }, import_react6.default.createElement("div", { style: { left: i.x, backgroundColor: `hsl(${c})` }, className: "rcp-hue-cursor" })));
});
var A = (0, import_react7.memo)(({ height: o, color: e, disabled: r, onChange: n, onChangeComplete: s }) => {
  let [t, { width: i }] = f(), a = (0, import_react7.useMemo)(() => {
    let h = e.hsv.s / 100 * i, d = (100 - e.hsv.v) / 100 * o;
    return { x: h, y: d };
  }, [e.hsv.s, e.hsv.v, i, o]), c = (0, import_react7.useCallback)((h, d, b) => {
    let I = m.convert("hsv", { ...e.hsv, s: d / i * 100, v: 100 - b / o * 100 });
    n(I), h && (s == null ? void 0 : s(I));
  }, [e.hsv, i, o, n, s]), u = (0, import_react7.useMemo)(() => [e.hsv.h, "100%", "50%"].join(" "), [e.hsv.h]), l = (0, import_react7.useMemo)(() => [e.rgb.r, e.rgb.g, e.rgb.b].join(" "), [e.rgb.r, e.rgb.g, e.rgb.b]);
  return import_react7.default.createElement(x, { disabled: r, onCoordinateChange: c }, import_react7.default.createElement("div", { ref: t, style: { height: o, backgroundColor: `hsl(${u})` }, className: "rcp-saturation" }, import_react7.default.createElement("div", { style: { left: a.x, top: a.y, backgroundColor: `rgb(${l})` }, className: "rcp-saturation-cursor" })));
});
var re = (0, import_react.memo)(({ height: o = 200, hideAlpha: e = false, hideInput: r = false, color: n, disabled: s = false, onChange: t, onChangeComplete: i }) => import_react.default.createElement("div", { className: "rcp-root rcp" }, import_react.default.createElement(A, { height: o, color: n, disabled: s, onChange: t, onChangeComplete: i }), import_react.default.createElement("div", { className: "rcp-body" }, import_react.default.createElement("section", { className: "rcp-section" }, import_react.default.createElement(F, { color: n, disabled: s, onChange: t, onChangeComplete: i }), !e && import_react.default.createElement(H, { color: n, disabled: s, onChange: t, onChangeComplete: i })), (!v(r, "hex") || !v(r, "rgb") || !v(r, "hsv")) && import_react.default.createElement("section", { className: "rcp-section" }, import_react.default.createElement(D, { hideInput: r, color: n, disabled: s, onChange: t, onChangeComplete: i })))));
function se(o) {
  let [e, r] = (0, import_react8.useState)(m.convert("hex", o));
  return (0, import_react8.useEffect)(() => {
    r(m.convert("hex", o));
  }, [o]), [e, r];
}
export {
  H as Alpha,
  re as ColorPicker,
  m as ColorService,
  F as Hue,
  A as Saturation,
  se as useColor
};
//# sourceMappingURL=react-color-palette.js.map
